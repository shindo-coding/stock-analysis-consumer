name: Kubernetes deploy

on:
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    types:
      - completed

jobs:
  deploy:
    runs-on: self-hosted
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    env:
      CI_REGISTRY_IMAGE: shindo806/stock-analysis-consumer
      PROJECT_NAME: stock-analysis-consumer
      EXPOSE_PORT: 80
      MEM_MIN: 128Mi
      CPU_MIN: 250m
      MEM_MAX: 256Mi
      CPU_MAX: 500m
      SCALE_MIN: 1
      SCALE_MAX: 3
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      PUSHOVER_USER: ${{ secrets.PUSHOVER_USER }}
      PUSHOVER_TOKEN: ${{ secrets.PUSHOVER_TOKEN }}
      RABBITMQ_URL: ${{ secrets.RABBITMQ_URL }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch Docker Tags
        id: fetch-latest-tag
        run: |
          # Fetch the JSON response from the Docker Hub
          response=$(curl -s "https://registry.hub.docker.com/v2/repositories/shindo806/stock-analysis/tags")

          # Extract the tag names using jq
          tag=$(echo "$response" | jq -r '.results[0].name')

          # Print tags (for debugging purposes)
          echo "Tags:"
          echo "$tag"

          # Set the tags as an output
          echo "DOCKER_TAG=$tag" >> ${GITHUB_OUTPUT}

      - name: Substitute environment variables in template
        env:
          DOCKER_TAG: ${{ steps.fetch-latest-tag.outputs.DOCKER_TAG }}
        run: |
          envsubst < template.yml > deployment.yml
          envsubst < hpa_template.yml > hpa.yml
        shell: bash

      - name: Deploy to Kubernetes
        env:
          DOCKER_TAG: ${{ steps.fetch-latest-tag.outputs.DOCKER_TAG }}
        run: |
          cat deployment.yml
          cat hpa.yml
          minikube kubectl -- apply -f deployment.yml
          minikube kubectl -- apply -f hpa.yml
          minikube kubectl -- rollout status deploy/$PROJECT_NAME
          # if minikube kubectl -- get deployment stock-analysis; then
          #   minikube kubectl -- patch deployment/stock-analysis -p '{"spec": {"template": {"spec": {"initContainers":[{"name":"'$PROJECT_NAME'-init", "image":"docker.io/shindo806/stock-analysis:'$DOCKER_TAG'"}]}}}}';
          #   minikube kubectl -- set image deployments/stock-analysis stock-analysis=docker.io/shindo806/stock-analysis:$DOCKER_TAG;
          #   minikube kubectl -- apply -f hpa.yml
          # else
          #   minikube kubectl -- apply -f deployment.yml
          #   minikube kubectl -- apply -f hpa.yml
          # fi
          # minikube kubectl -- rollout status deploy/$PROJECT_NAME
        shell: bash
