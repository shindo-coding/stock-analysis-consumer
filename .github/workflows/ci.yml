name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  create_release_id:
    runs-on: self-hosted
    timeout-minutes: 20
    env:
      USE_RAND: ${{ inputs.use_rand && 'true' || 'false' }}
    # Map a step output to a job output
    outputs:
      tag: ${{ steps.create_id.outputs.DOCKER_TAG }}
    steps:
      - id: create_id
        run: |
          if [ "${USE_RAND}" == "true" ]
          then
            export DOCKER_TAG=$(openssl rand -hex 8)
          else
            export DOCKER_TAG=$(TZ="UTC" date +"%Y%m%d%H%M")
          fi
          echo "DOCKER_TAG=${DOCKER_TAG}" >> ${GITHUB_OUTPUT}

  package_docker:
    runs-on: self-hosted
    needs: ["create_release_id"]

    env:
      CI_REGISTRY_IMAGE: shindo806/stock-analysis-consumer
      PROJECT_NAME: stock-analysis-consumer
      EXPOSE_PORT: 80
      MEM_MIN: 128Mi
      CPU_MIN: 250m
      MEM_MAX: 256Mi
      CPU_MAX: 500m
      SCALE_MIN: 1
      SCALE_MAX: 3
      DOCKER_TAG: ${{ needs.create_release_id.outputs.tag }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      PUSHOVER_USER: ${{ secrets.PUSHOVER_USER }}
      VOLUME_PUSHOVER_TOKEN: ${{ secrets.VOLUME_PUSHOVER_TOKEN }}
      PRICE_PUSHOVER_TOKEN: ${{ secrets.PRICE_PUSHOVER_TOKEN }}
      GOOD_INVESTOR_PUSHOVER_TOKEN: ${{ secrets.GOOD_INVESTOR_PUSHOVER_TOKEN }}
      RABBITMQ_URL: ${{ secrets.RABBITMQ_URL }}

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build

    - name: Log in to Docker Hub
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build  -t $CI_REGISTRY_IMAGE:$DOCKER_TAG .
        docker push $CI_REGISTRY_IMAGE:$DOCKER_TAG
